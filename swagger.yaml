basePath: /
consumes:
- application/json
definitions:
  Product:
    description: Product defines the structure for an API product
    properties:
      createdAt:
        type: string
        x-go-name: CreatedAt
      deletedAt:
        type: string
        x-go-name: DeletedAt
      description:
        description: the description for this poduct
        maxLength: 10000
        type: string
        x-go-name: Description
      id:
        description: the id for the product
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: the name for this poduct
        maxLength: 255
        type: string
        x-go-name: Name
      price:
        description: the price for the product
        format: double
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: the SKU for the product
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
      updatedAt:
        type: string
        x-go-name: UpdatedAt
    required:
    - name
    - price
    - sku
    type: object
    x-go-package: microservice_tutorial/data
  errorResponse:
    properties:
      err:
        description: |-
          Error code
          in: body
        format: int64
        type: integer
        x-go-name: Err
      message:
        description: |-
          Error message
          in: body
        type: string
        x-go-name: Message
    type: object
    x-go-package: microservice_tutorial/handlers
info:
  description: Documentation for Product API
  title: Product API
  version: 1.0.0
paths:
  /products:
    get:
      description: Returns a list of products
      operationId: listProducts
      parameters:
      - description: |-
          Currency use when returning the price of the product,
          when not specified currency is returned in GBP.
        in: query
        name: Currency
        type: string
      responses:
        "200":
          $ref: '#/responses/productResponse'
      tags:
      - products
    post:
      description: Adds a product to the Database
      operationId: registerProduct
      responses:
        "201":
          $ref: '#/responses/noContent'
      tags:
      - products
  /products/{id}:
    delete:
      description: Removes an existing product from the DB
      operationId: removeProducts
      parameters:
      - description: The id of the product to be removed from the database
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "201":
          $ref: '#/responses/noContent'
        "500":
          $ref: '#/responses/InternalServerError'
      tags:
      - products
    get:
      description: Returns a products
      operationId: listSingleProducts
      parameters:
      - description: |-
          Currency use when returning the price of the product,
          when not specified currency is returned in GBP.
        in: query
        name: Currency
        type: string
      responses:
        "200":
          $ref: '#/responses/singleProductResponse'
      tags:
      - products
    put:
      description: updates an existing product
      operationId: updateProduct
      parameters:
      - description: The id of the product to be removed from the database
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/productResponse'
        "500":
          $ref: '#/responses/InternalServerError'
      tags:
      - products
produces:
- application/json
responses:
  InternalServerError:
    description: Internal Server Error response
    schema:
      items:
        $ref: '#/definitions/errorResponse'
      type: array
  noContent:
    description: No content is returned
  productResponse:
    description: A List of Products returns in the response
    schema:
      items:
        $ref: '#/definitions/Product'
      type: array
  singleProductResponse:
    description: ""
    schema:
      $ref: '#/definitions/Product'
schemes:
- http
swagger: "2.0"
